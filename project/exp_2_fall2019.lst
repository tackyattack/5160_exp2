C51 COMPILER V6.02  EXP_2_FALL2019                                                         10/05/2019 02:53:06 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE EXP_2_FALL2019
OBJECT MODULE PLACED IN .\exp_2_fall2019.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\exp_2_fall2019.c DEBUG OBJECTEXTEND PRINT(.\exp_2_fall2019.lst) O
                    -BJECT(.\exp_2_fall2019.obj) 

stmt level    source

   1          #include <stdio.h>
   2          #include "main.h"
   3          #include "PORT.H"
   4          #include "UART.h"
   5          #include "print_bytes.h"
   6          #include "Timer0_hardware_delay_1ms.h"
   7          #include "LCD_routines.h"
   8          #include "LED_Outputs.h"
   9          #include "Long_Serial_In.h"
  10          #include "SPI.h"
  11          #include "SD_card.h"
  12          #include "outputs.h"
  13          
  14          main()
  15          {
  16   1         uint8_t error_flag;
  17   1         LED_ON(RED_LED_PIN);
  18   1         LED_OFF(GREEN_LED_PIN);
  19   1         LED_OFF(AMBER_LED_PIN);
  20   1         LED_OFF(YELLOW_LED_PIN);
  21   1         //*** This line is needed to make all 1,024 byes of XRAM avaiable ***//
  22   1         AUXR=0x0c;   // make all of XRAM available, ALE always on
  23   1         if(OSC_PER_INST==6)
  24   1         {
  25   2             CKCON0=0x01;  // set X2 clock mode
  26   2         }
  27   1         else if(OSC_PER_INST==12)
  28   1         {
  29   2             CKCON0=0x00;  // set standard clock mode
  30   2         }
  31   1         Timer0_DELAY_1ms(300); // Delay to see RED LED (visual indication program is executing)
  32   1         //*** Initialization Functions  ***//
  33   1         uart_init(9600);
  34   1         LCD_Init();
  35   1         error_flag = SPI_master_init(400000);
  36   1         if(error_flag != SPI_INIT_OK) printf("SPI init error\n");
  37   1      
  38   1         error_flag = SD_card_init();
  39   1         if(error_flag != SD_CARD_INIT_OK)
  40   1         {
  41   2          printf("SD card init error\n");
  42   2          LCD_Print(0x00, sizeof("SD card error")-1, "SD card error");
  43   2         }
  44   1         else
  45   1         {
  46   2           printf("SD card init success\n");
  47   2           LCD_Print(0x00, sizeof("SD card success")-1, "SD card success");
  48   2           LED_ON(GREEN_LED_PIN);
  49   2         }
  50   1         LED_OFF(RED_LED_PIN);
  51   1         //**** Super Loop ****//
  52   1         while(1)
  53   1         {
  54   2              //Example of how to use lond serial input function to read a 32-bit input value
C51 COMPILER V6.02  EXP_2_FALL2019                                                         10/05/2019 02:53:06 PAGE 2   

  55   2              uint32_t input_value;
  56   2              printf("Input a value: ");
  57   2              input_value = long_serial_input();
  58   2      		//Notice the 'l' modifier on %u which indicates a long (32-bit value)
  59   2      		//If the value to print is a char (8-bit value), then use a 'b' modifier (%bu).
  60   2              printf("Value Entered = %lu\n\r",input_value);
  61   2      
  62   2         }
  63   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    177    ----
   CONSTANT SIZE    =    126    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
